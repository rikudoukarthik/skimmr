[{"path":"https://rikudoukarthik.github.io/skimmr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 skimmr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karthik Thrikkadeeri. Author, maintainer. Ashwin Viswanathan. Contributor.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thrikkadeeri K (2025). skimmr: Working eBird data made easy. R package version 0.0.0.9006, https://rikudoukarthik.github.io/skimmr/.","code":"@Manual{,   title = {skimmr: Working with eBird data made easy},   author = {Karthik Thrikkadeeri},   year = {2025},   note = {R package version 0.0.0.9006},   url = {https://rikudoukarthik.github.io/skimmr/}, }"},{"path":"https://rikudoukarthik.github.io/skimmr/index.html","id":"skimmr","dir":"","previous_headings":"","what":"Working with eBird data made easy","title":"Working with eBird data made easy","text":"goal skimmr simplify various data sorting, processing analysis tasks Bird Count India (others) using eBird data, make tasks efficient robust.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with eBird data made easy","text":"can install development version skimmr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"rikudoukarthik/skimmr\")"},{"path":"https://rikudoukarthik.github.io/skimmr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Working with eBird data made easy","text":"basic example shows solve common problem:","code":"library(skimmr)  # get parameters useful when manipulating eBird data (e.g., EBD), like dates ebird_rel_param()  # saves real-time date, EBD current release date, EBD previous release date, and other associated values as objects in environment"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/cols_to_ebd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert columns in eBird data to EBD style — cols_to_ebd","title":"Convert columns in eBird data to EBD style — cols_to_ebd","text":"column names datasets Data ideal: contain white spaces follow complex capitalisation. cases, cols_to_ebd() can used standardise column names match default style read.ebd(), .e., fully uppercase periods replacing spaces.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/cols_to_ebd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert columns in eBird data to EBD style — cols_to_ebd","text":"","code":"cols_to_ebd(data, type = \"mydata\")"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/cols_to_ebd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert columns in eBird data to EBD style — cols_to_ebd","text":"data eBird Data object, vector column names eBird Data type character; \"mydata\" personal Data download","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/cols_to_ebd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert columns in eBird data to EBD style — cols_to_ebd","text":"updated data frame new column names, columns changed: PROTOCOL.TYPE .MEDIA (ML Catalog Numbers) values converted EBD style","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_admin_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Administrative units of the Indian subcontinent — ebird_admin_units","title":"Administrative units of the Indian subcontinent — ebird_admin_units","text":"Names codes administrative units (three levels) used eBird datasets eight countries Indian subcontinent. often mismatch information administrative units different sources, data can useful work involving eBird data, particularly cases low data downloaded dataset might observations relevant units subunits. data obtained API therefore stay date package release. However, may outdated changes occur package updated. cases, one can use rebird::ebirdsubregionlist() manually (section See Also).","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_admin_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Administrative units of the Indian subcontinent — ebird_admin_units","text":"","code":"ebird_admin_units"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_admin_units.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Administrative units of the Indian subcontinent — ebird_admin_units","text":"tibble 1,135 observations 6 variables (names 2-letter ISO codes).","code":""},{"path":[]},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_admin_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Administrative units of the Indian subcontinent — ebird_admin_units","text":"","code":"ebird_admin_units #> # A tibble: 1,135 × 6 #>    COUNTRY.CODE COUNTRY STATE.CODE STATE                      COUNTY.CODE COUNTY #>    <chr>        <chr>   <chr>      <chr>                      <chr>       <chr>  #>  1 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-AN    North… #>  2 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-AS    South… #>  3 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-NI    Nicob… #>  4 IN           India   IN-AP      Andhra Pradesh             IN-AP-AN    Anant… #>  5 IN           India   IN-AP      Andhra Pradesh             IN-AP-CH    Chitt… #>  6 IN           India   IN-AP      Andhra Pradesh             IN-AP-CU    YSR D… #>  7 IN           India   IN-AP      Andhra Pradesh             IN-AP-EG    East … #>  8 IN           India   IN-AP      Andhra Pradesh             IN-AP-GU    Guntur #>  9 IN           India   IN-AP      Andhra Pradesh             IN-AP-KR    Krish… #> 10 IN           India   IN-AP      Andhra Pradesh             IN-AP-KU    Kurno… #> # ℹ 1,125 more rows   # get data for only India   dplyr::filter(ebird_admin_units, COUNTRY.CODE == \"IN\") #> # A tibble: 735 × 6 #>    COUNTRY.CODE COUNTRY STATE.CODE STATE                      COUNTY.CODE COUNTY #>    <chr>        <chr>   <chr>      <chr>                      <chr>       <chr>  #>  1 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-AN    North… #>  2 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-AS    South… #>  3 IN           India   IN-AN      Andaman and Nicobar Islan… IN-AN-NI    Nicob… #>  4 IN           India   IN-AP      Andhra Pradesh             IN-AP-AN    Anant… #>  5 IN           India   IN-AP      Andhra Pradesh             IN-AP-CH    Chitt… #>  6 IN           India   IN-AP      Andhra Pradesh             IN-AP-CU    YSR D… #>  7 IN           India   IN-AP      Andhra Pradesh             IN-AP-EG    East … #>  8 IN           India   IN-AP      Andhra Pradesh             IN-AP-GU    Guntur #>  9 IN           India   IN-AP      Andhra Pradesh             IN-AP-KR    Krish… #> 10 IN           India   IN-AP      Andhra Pradesh             IN-AP-KU    Kurno… #> # ℹ 725 more rows"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_rel_param.html","id":null,"dir":"Reference","previous_headings":"","what":"EBD parameters — ebird_rel_param","title":"EBD parameters — ebird_rel_param","text":"Get date parameters based current specified date","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_rel_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EBD parameters — ebird_rel_param","text":"","code":"ebird_rel_param(   date_real = NULL,   date_currel = NULL,   date_prevrel = NULL,   extra = FALSE )"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_rel_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EBD parameters — ebird_rel_param","text":"date_real date string date_currel date string date_prevrel date string extra whether extra parameters needed","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_rel_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EBD parameters — ebird_rel_param","text":"multiple date objects","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/ebird_rel_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EBD parameters — ebird_rel_param","text":"","code":"ebird_rel_param() ebird_rel_param(extra = TRUE) #> <environment: R_GlobalEnv> ebird_rel_param(\"2023-10-01\")"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/filter_eligible.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter eBird data for eligible checklists — filter_eligible","title":"Filter eBird data for eligible checklists — filter_eligible","text":"various usecases, required filter eBird dataset use \"eligible\" checklists. example monthly eBird challenges run various collectives across world. , definitions \"eligibility\" tend vary, two popularly used definitions can accessed via standard argument. hand, also possible create custom eligibility filter, setting standard = NULL providing input arguments.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/filter_eligible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter eBird data for eligible checklists — filter_eligible","text":"","code":"filter_eligible(   data,   standard = \"bci\",   complete = NULL,   duration = NULL,   counts = NULL )"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/filter_eligible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter eBird data for eligible checklists — filter_eligible","text":"data eBird data object standard character; standard eligibility criterion (default \"bci\", \"ebird\") complete logical; whether filter complete checklists (default NULL) duration numerical; whether filter specified checklist duration (>=; default NULL) counts logical; whether filter true counts (.e., remove lists reporting Xs; default NULL)","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/filter_eligible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter eBird data for eligible checklists — filter_eligible","text":"updated eBird data object filtered specified","code":""},{"path":[]},{"path":"https://rikudoukarthik.github.io/skimmr/reference/india_checklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Checklist of birds of India — india_checklist","title":"Checklist of birds of India — india_checklist","text":"comprehensive checklist birds India, taxonomy. current version checklist contains 1368 species. Please cite online checklist : Praveen J., & Jayapal, R., 2024. Checklist birds India (v8.2). Website: http://www.indianbirds./india/ (Date publication: 20 August 2024)","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/india_checklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checklist of birds of India — india_checklist","text":"","code":"india_checklist"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/india_checklist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Checklist of birds of India — india_checklist","text":"tibble 1,368 observations 25 variables. Please see original .xlsx file (Source ) descriptions variable.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/india_checklist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Checklist of birds of India — india_checklist","text":"https://indianbirds./india/","code":""},{"path":[]},{"path":"https://rikudoukarthik.github.io/skimmr/reference/india_checklist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checklist of birds of India — india_checklist","text":"","code":"india_checklist #> # A tibble: 1,368 × 25 #>    Order        Family   Species      `English Name` `Scientific Name` Authority #>    <chr>        <chr>    <chr>        <chr>          <chr>             <chr>     #>  1 Anseriformes Anatidae Fulvous Whi… Fulvous Whist… Dendrocygna bico… (Vieillo… #>  2 Anseriformes Anatidae Lesser Whis… Lesser Whistl… Dendrocygna java… (Horsfie… #>  3 Anseriformes Anatidae Bar-headed … Bar-headed Go… Anser indicus     (Latham,… #>  4 Anseriformes Anatidae Greylag Goo… Greylag Goose  Anser anser       (Linnaeu… #>  5 Anseriformes Anatidae Greater Whi… Greater White… Anser albifrons   (Scopoli… #>  6 Anseriformes Anatidae Lesser Whit… Lesser White-… Anser erythropus  (Linnaeu… #>  7 Anseriformes Anatidae Taiga Bean-… Taiga Bean-Go… Anser fabalis     (Latham,… #>  8 Anseriformes Anatidae Tundra Bean… Tundra Bean-G… Anser serrirostr… Gould, 1… #>  9 Anseriformes Anatidae Barnacle Go… Barnacle Goose Branta leucopsis  (Bechste… #> 10 Anseriformes Anatidae Red-breaste… Red-breasted … Branta ruficollis (Pallas,… #> # ℹ 1,358 more rows #> # ℹ 19 more variables: `Alternative Name(s)` <chr>, Rarity <chr>, #> #   Historical <chr>, `IUCN RedList_2023` <chr>, `WPA Schedule` <chr>, #> #   `SOIB 2023` <chr>, `CITES Appendix` <chr>, `CMS Appendix` <chr>, #> #   `Endemic (India)` <chr>, `Endemic (Andaman & Nicobar Is)` <chr>, #> #   `Endemic (Assam Plains)` <chr>, `Endemic (Cental Indian Forests)` <chr>, #> #   `Endemic (Southern Andhra Pradesh)` <chr>, …"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/read.ebd.html","id":null,"dir":"Reference","previous_headings":"","what":"Load eBird data files — read.ebd","title":"Load eBird data files — read.ebd","text":"Reads .txt eBird data file creates data frame , cases corresponding lines (rows) variables fields (columns) file. commonly used types eBird data files eBird Basic Dataset (EBD; may contain three subtypes files) Data download (contains data associated specific eBird account). two differ download file type, column naming format, available columns, etc. read.ebd read.mydata import EBD Data files respectively. Since EBD contains several columns, may required given usecase, cols_sel can used import subset columns. see list columns names choose , run read.ebd(ebd_path, cols_print_only = TRUE). function wrapper around utils::read.delim(), considerably faster readr::read_delim() used auk::read_ebd(). Moreover, unlike latter uses snake case column names, function uses uppercase period separators.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/read.ebd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load eBird data files — read.ebd","text":"","code":"read.ebd(path, cols_sel = \"all\", cols_print_only = FALSE)  read.mydata(   path = \"MyEBirdData.csv\",   cols_sel = \"all\",   cols_print_only = FALSE,   cols_style_ebd = FALSE )"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/read.ebd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load eBird data files — read.ebd","text":"path character; path downloaded EBD .txt file cols_sel character; vector column names imported dataset cols_print_only logical; whether print full set column names cols_style_ebd logical; TRUE (default), change column names Data uppercase separated period (COLUMN.STYLE), read.ebd()","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/read.ebd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load eBird data files — read.ebd","text":"data frame (cols_print_only == FALSE), character vector column names (cols_print_only == TRUE)","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/read.ebd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load eBird data files — read.ebd","text":"","code":"# to see list of column names before choosing test1 <- data.frame(SAMPLING.EVENT.IDENTIFIER = \"S0000001\", COMMON.NAME = \"Indian Peafowl\") tf <- tempfile() write.table(test1, file = tf, col.names = TRUE, row.names = FALSE, sep = \"\\t\",             quote = FALSE) # quote = TRUE surrounds column names by quotes read.ebd(tf, cols_print_only = TRUE) #> [1] \"SAMPLING.EVENT.IDENTIFIER\" \"COMMON.NAME\"                # select columns and import data read.ebd(tf, cols_sel = c(\"SAMPLING.EVENT.IDENTIFIER\", \"COMMON.NAME\")) #>   SAMPLING.EVENT.IDENTIFIER    COMMON.NAME #> 1                  S0000001 Indian Peafowl"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/skimmr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"skimmr: Working with eBird data made easy — skimmr-package","title":"skimmr: Working with eBird data made easy — skimmr-package","text":"Functions various data sorting, processing analysis tasks citizen science practitioners using eBird data.","code":""},{"path":[]},{"path":"https://rikudoukarthik.github.io/skimmr/reference/skimmr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"skimmr: Working with eBird data made easy — skimmr-package","text":"Maintainer: Karthik Thrikkadeeri rikudoukarthik@gmail.com (ORCID) contributors: Ashwin Viswanathan ashwinv2005@gmail.com (ORCID) [contributor]","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib.html","id":null,"dir":"Reference","previous_headings":"","what":"State of India's Birds (SoIB) datasheet — soib","title":"State of India's Birds (SoIB) datasheet — soib","text":"latest State India's Birds (SoIB) datasheet national level. current version datasheet contains 1356 species. Please cite datasheet : SoIB. (2023). State India's Birds, 2023: Range, trends, conservation status (p. 119). SoIB Partnership. https://doi.org/10.5281/zenodo.11124590","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State of India's Birds (SoIB) datasheet — soib","text":"","code":"soib"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"State of India's Birds (SoIB) datasheet — soib","text":"tibble 1357 observations 51 variables. Please see original .xlsx file (Source ) descriptions variable.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"State of India's Birds (SoIB) datasheet — soib","text":"https://zenodo.org/records/11124589?","code":""},{"path":[]},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State of India's Birds (SoIB) datasheet — soib","text":"","code":"soib #> # A tibble: 1,357 × 51 #>    `English Name`              `Scientific Name`    `SoIB 2023 Priority Status` #>    <chr>                       <chr>                <chr>                       #>  1 Fulvous Whistling Duck      Dendrocygna bicolor  Low                         #>  2 Lesser Whistling Duck       Dendrocygna javanica Low                         #>  3 Bar-headed Goose            Anser indicus        Moderate                    #>  4 Greylag Goose               Anser anser          Low                         #>  5 Greater White-fronted Goose Anser albifrons      NA                          #>  6 Lesser White-fronted Goose  Anser erythropus     NA                          #>  7 Bean Goose                  Anser fabalis        NA                          #>  8 Bean Goose                  Anser fabalis        NA                          #>  9 Red-breasted Goose          Branta ruficollis    NA                          #> 10 Mute Swan                   Cygnus olor          NA                          #> # ℹ 1,347 more rows #> # ℹ 48 more variables: `SoIB 2023 Long-term Trend Status` <chr>, #> #   `SoIB 2023 Current Annual Trend Status` <chr>, #> #   `SoIB 2023 Distribution Range Size Status` <chr>, #> #   `eBird English Name 2022` <chr>, `eBird Scientific Name 2022` <chr>, #> #   `BLI English Name 2022` <chr>, `BLI Scientific Name 2022` <chr>, #> #   Order <chr>, Family <chr>, `Breeding Activity Period` <chr>, …"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib_skim.html","id":null,"dir":"Reference","previous_headings":"","what":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","title":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","text":"Whereas soib latest State India's Birds (SoIB) datasheet national level, soib_skim() lets obtain SoIB datasheet specific subnational (national, mask == \"India\") mask choice, habitat masks individual states.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib_skim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","text":"","code":"soib_skim(mask)"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib_skim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","text":"mask character; valid mask name","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib_skim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","text":"tibble. Please find info descriptions variable source listed documentation soib.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/soib_skim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get State of India's Birds (SoIB) datasheet for specific mask — soib_skim","text":"","code":"soib_skim(\"ONEs\") # get SoIB data for Open Natural Ecosystems (ONEs) #> # A tibble: 118 × 52 #>    `English Name`     `Scientific Name`         `SoIB 2023 Priority Status` #>    <chr>              <chr>                     <chr>                       #>  1 Sclater's Monal    Lophophorus sclateri      High                        #>  2 Grey Francolin     Ortygornis pondicerianus  Low                         #>  3 Black Francolin    Francolinus francolinus   Low                         #>  4 Painted Francolin  Francolinus pictus        Low                         #>  5 Himalayan Snowcock Tetraogallus himalayensis Moderate                    #>  6 Chukar Partridge   Alectoris chukar          Low                         #>  7 Jungle Bush Quail  Perdicula asiatica        Low                         #>  8 Rock Bush Quail    Perdicula argoondah       Moderate                    #>  9 Painted Bush Quail Perdicula erythrorhyncha  Moderate                    #> 10 Hill Pigeon        Columba rupestris         Low                         #> # ℹ 108 more rows #> # ℹ 49 more variables: `SoIB 2023 Long-term Trend Status` <chr>, #> #   `SoIB 2023 Current Annual Trend Status` <chr>, #> #   `SoIB 2023 Distribution Range Size Status` <chr>, #> #   `eBird English Name 2022` <chr>, `eBird Scientific Name 2022` <chr>, #> #   `BLI English Name 2022` <chr>, `BLI Scientific Name 2022` <chr>, #> #   Order <chr>, Family <chr>, `Breeding Activity Period` <chr>, …"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/unzip_ebd.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip eBird Basic Dataset (EBD) file — unzip_ebd","title":"Unzip eBird Basic Dataset (EBD) file — unzip_ebd","text":"Unzips EBD data download file, saves three selected data files: main dataset vetted observation records, sampling event data (SED), unvetted records. dataset_str varies options selected downloading data; may contain district-level admin. codes, species codes, tags indicating whether SED unvetted data included.","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/unzip_ebd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip eBird Basic Dataset (EBD) file — unzip_ebd","text":"","code":"unzip_ebd(   dataset_str = \"ebd_IN_unv_smp_rel\",   unzip_which = c(\"ebd\", \"sed\"),   dir_name = NULL )"},{"path":"https://rikudoukarthik.github.io/skimmr/reference/unzip_ebd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip eBird Basic Dataset (EBD) file — unzip_ebd","text":"dataset_str character; string file name data download, ending _rel unzip_which character; vector listing \"ebd\", \"sed\" \"unv\" unzip dir_name character; specify subfolder name zip file (exists), without trailing slash","code":""},{"path":"https://rikudoukarthik.github.io/skimmr/reference/unzip_ebd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unzip eBird Basic Dataset (EBD) file — unzip_ebd","text":"return output. Specified files unzipped saved local directory.","code":""}]
